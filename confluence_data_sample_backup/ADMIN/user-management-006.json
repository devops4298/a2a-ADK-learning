{
  "content": "# User Management and Permissions\n\nThis guide covers how to manage users, roles, and permissions in the system.\n\n## User Roles\n\n### Administrator\n- Full system access\n- Can manage all users and settings\n- Can access admin panel\n- Can modify system configuration\n\n### Developer\n- Can deploy applications\n- Can access development tools\n- Can view logs and metrics\n- Cannot modify user permissions\n\n### Viewer\n- Read-only access\n- Can view documentation\n- Can access public APIs\n- Cannot modify anything\n\n## Adding New Users\n\n### Via Admin Panel\n1. Login as administrator\n2. Navigate to Admin > Users\n3. Click \"Add New User\"\n4. Fill in user details:\n   - Username\n   - Email\n   - Full Name\n   - Initial Password\n5. Assign role\n6. Click \"Create User\"\n\n### Via API\n```bash\ncurl -X POST /api/users \\\n  -H \"Authorization: Bearer $ADMIN_TOKEN\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"username\": \"newuser\",\n    \"email\": \"user@example.com\",\n    \"name\": \"New User\",\n    \"role\": \"developer\"\n  }'\n```\n\n## Managing Permissions\n\n### Project-Level Permissions\n- **Owner**: Full control over project\n- **Maintainer**: Can modify project settings\n- **Developer**: Can push code and deploy\n- **Reporter**: Can view and create issues\n- **Guest**: Read-only access\n\n### API Permissions\n- **read**: Can view resources\n- **write**: Can create/update resources\n- **delete**: Can remove resources\n- **admin**: Full API access\n\n## Password Management\n\n### Password Requirements\n- Minimum 8 characters\n- Must contain uppercase letter\n- Must contain lowercase letter\n- Must contain number\n- Must contain special character\n\n### Password Reset\n1. User clicks \"Forgot Password\"\n2. System sends reset email\n3. User clicks reset link\n4. User enters new password\n5. System validates and updates\n\n### Force Password Reset\nAdministrators can force users to reset passwords:\n```bash\ncurl -X POST /api/users/{user_id}/force-reset \\\n  -H \"Authorization: Bearer $ADMIN_TOKEN\"\n```\n\n## User Groups\n\n### Creating Groups\n1. Go to Admin > Groups\n2. Click \"Create Group\"\n3. Enter group name and description\n4. Add users to group\n5. Assign permissions to group\n\n### Default Groups\n- **admins**: System administrators\n- **developers**: Development team\n- **support**: Support team\n- **users**: Regular users\n\n## Single Sign-On (SSO)\n\n### SAML Configuration\n```yaml\nsaml:\n  enabled: true\n  entity_id: \"https://yourapp.com\"\n  sso_url: \"https://idp.example.com/sso\"\n  certificate: \"/path/to/cert.pem\"\n```\n\n### OAuth2 Configuration\n```yaml\noauth2:\n  enabled: true\n  provider: \"google\"\n  client_id: \"your-client-id\"\n  client_secret: \"your-client-secret\"\n  redirect_uri: \"https://yourapp.com/auth/callback\"\n```\n\n## Audit Logging\n\nAll user management actions are logged:\n- User creation/deletion\n- Permission changes\n- Login attempts\n- Password resets\n- Role modifications\n\n### Viewing Audit Logs\n```bash\ncurl -X GET /api/audit/users \\\n  -H \"Authorization: Bearer $ADMIN_TOKEN\"\n```\n\n## Best Practices\n\n1. **Principle of Least Privilege**: Give users minimum required permissions\n2. **Regular Reviews**: Review user permissions quarterly\n3. **Strong Passwords**: Enforce password complexity requirements\n4. **MFA**: Enable multi-factor authentication for admins\n5. **Offboarding**: Remove access immediately when users leave\n\n## Troubleshooting\n\n### User Cannot Login\n1. Check if account is active\n2. Verify password hasn't expired\n3. Check for account lockout\n4. Verify email address\n\n### Permission Denied Errors\n1. Check user role assignments\n2. Verify group memberships\n3. Check project-specific permissions\n4. Review API key permissions\n\n### SSO Issues\n1. Verify SSO configuration\n2. Check certificate validity\n3. Test IdP connectivity\n4. Review SAML/OAuth logs",
  "metadata": {
    "title": "User Management and Permissions",
    "url": "https://confluence.example.com/display/ADMIN/User+Management+and+Permissions",
    "last_updated": "2024-01-20T14:15:00Z",
    "space_key": "ADMIN",
    "author": "Admin Team",
    "tags": ["users", "permissions", "roles", "security", "admin"]
  }
}
