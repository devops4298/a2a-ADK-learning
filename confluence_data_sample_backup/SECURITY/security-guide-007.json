{
  "content": "# Security Best Practices\n\nThis guide outlines essential security practices for our platform.\n\n## Authentication Security\n\n### Multi-Factor Authentication (MFA)\n- **Required** for all administrator accounts\n- **Recommended** for all developer accounts\n- Supported methods:\n  - TOTP (Google Authenticator, Authy)\n  - SMS (for backup only)\n  - Hardware tokens (YubiKey)\n\n### Password Security\n- Minimum 12 characters for admin accounts\n- Password rotation every 90 days\n- No password reuse (last 12 passwords)\n- Use password managers\n\n### API Key Management\n- Rotate API keys every 6 months\n- Use different keys for different environments\n- Never commit keys to version control\n- Store keys in secure vaults (HashiCorp Vault, AWS Secrets Manager)\n\n## Network Security\n\n### HTTPS/TLS\n- **All** traffic must use HTTPS\n- TLS 1.2 minimum, TLS 1.3 preferred\n- Valid SSL certificates from trusted CA\n- HSTS headers enabled\n\n### Firewall Rules\n```bash\n# Allow only necessary ports\n# Web traffic\nallow 80/tcp\nallow 443/tcp\n\n# SSH (restricted IPs only)\nallow 22/tcp from 10.0.0.0/8\n\n# Database (internal only)\nallow 5432/tcp from 10.0.1.0/24\n\n# Deny all other traffic\ndeny all\n```\n\n### VPN Access\n- Required for production system access\n- Use WireGuard or OpenVPN\n- Regular access reviews\n- Automatic disconnection after 8 hours\n\n## Application Security\n\n### Input Validation\n- Validate all user inputs\n- Use parameterized queries\n- Sanitize output data\n- Implement rate limiting\n\n### SQL Injection Prevention\n```python\n# Good - Parameterized query\ncursor.execute(\n    \"SELECT * FROM users WHERE id = %s\", \n    (user_id,)\n)\n\n# Bad - String concatenation\ncursor.execute(\n    f\"SELECT * FROM users WHERE id = {user_id}\"\n)\n```\n\n### Cross-Site Scripting (XSS) Prevention\n- Escape all user-generated content\n- Use Content Security Policy (CSP)\n- Validate and sanitize inputs\n- Use secure templating engines\n\n### CSRF Protection\n- Use CSRF tokens\n- Validate referrer headers\n- Implement SameSite cookies\n\n## Data Security\n\n### Encryption at Rest\n- Database encryption enabled\n- File system encryption (LUKS/BitLocker)\n- Backup encryption\n- Key management via HSM or cloud KMS\n\n### Encryption in Transit\n- TLS for all communications\n- VPN for internal traffic\n- Encrypted database connections\n- Secure file transfers (SFTP/SCP)\n\n### Data Classification\n- **Public**: Marketing materials, documentation\n- **Internal**: Business processes, internal tools\n- **Confidential**: Customer data, financial info\n- **Restricted**: Security keys, personal data\n\n## Monitoring and Logging\n\n### Security Monitoring\n- Failed login attempts\n- Privilege escalations\n- Unusual access patterns\n- File integrity monitoring\n\n### Log Management\n```yaml\nlogging:\n  security_events:\n    - authentication_failures\n    - authorization_changes\n    - data_access\n    - system_changes\n  retention: 1_year\n  encryption: true\n  backup: true\n```\n\n### Incident Response\n1. **Detection**: Automated alerts and monitoring\n2. **Analysis**: Determine scope and impact\n3. **Containment**: Isolate affected systems\n4. **Eradication**: Remove threats\n5. **Recovery**: Restore normal operations\n6. **Lessons Learned**: Update procedures\n\n## Compliance\n\n### GDPR Compliance\n- Data minimization\n- Right to erasure\n- Data portability\n- Privacy by design\n- Consent management\n\n### SOC 2 Requirements\n- Access controls\n- System monitoring\n- Change management\n- Risk assessment\n- Vendor management\n\n## Security Tools\n\n### Vulnerability Scanning\n- **Nessus**: Network vulnerability scanning\n- **OWASP ZAP**: Web application scanning\n- **Snyk**: Dependency vulnerability scanning\n- **Trivy**: Container image scanning\n\n### Security Testing\n```bash\n# Run security scans\nnmap -sS -O target_host\nnikto -h https://target.com\nsqlmap -u \"https://target.com/page?id=1\"\n```\n\n## Emergency Procedures\n\n### Security Incident Response\n1. **Immediate Actions**:\n   - Isolate affected systems\n   - Preserve evidence\n   - Notify security team\n\n2. **Communication**:\n   - Internal stakeholders\n   - Customers (if required)\n   - Regulatory bodies\n\n3. **Recovery**:\n   - Patch vulnerabilities\n   - Restore from clean backups\n   - Update security controls\n\n### Contact Information\n- **Security Team**: security@example.com\n- **Emergency Hotline**: +1-555-SECURITY\n- **Incident Response**: incidents@example.com\n\n## Regular Security Tasks\n\n### Daily\n- Review security alerts\n- Check failed login attempts\n- Monitor system logs\n\n### Weekly\n- Update security patches\n- Review access logs\n- Backup verification\n\n### Monthly\n- Vulnerability scans\n- Access reviews\n- Security training\n\n### Quarterly\n- Penetration testing\n- Policy reviews\n- Risk assessments",
  "metadata": {
    "title": "Security Best Practices",
    "url": "https://confluence.example.com/display/SECURITY/Security+Best+Practices",
    "last_updated": "2024-01-18T11:30:00Z",
    "space_key": "SECURITY",
    "author": "Security Team",
    "tags": ["security", "best-practices", "compliance", "monitoring"]
  }
}
